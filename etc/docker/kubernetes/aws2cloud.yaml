#########################################################################
#      Copyright (C) 2020        Sebastian Francisco Colomar Bauza      #
#      SPDX-License-Identifier:  GPL-2.0-only                           #
#########################################################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws2cloud
spec:
  replicas: 1
  selector:
    matchLabels:
      service: aws2cloud
  template:
    metadata:
      labels:
        service: aws2cloud
    spec:
      containers:
      - name: aws2cloud
        image: secobau/proxy2aws:latest
        volumeMounts:
        - name: aws2cloud-logs
          mountPath: /var/log/nginx
        - name: aws2cloud-conf
          mountPath: /run/secrets/etc/nginx/conf.d
          readOnly: true
        - name: aws2cloud-htpasswd
          mountPath: /run/secrets/etc/nginx
          readOnly: true
      volumes:
      - name: aws2cloud-logs
        emptyDir: {}
      - name: aws2cloud-conf
        configMap:
          name: aws2cloud.conf
      - name: aws2cloud-htpasswd
        secret:
          secretName: aws2cloud.htpasswd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud2instance
spec:
  replicas: 1
  selector:
    matchLabels:
      service: cloud2instance
  template:
    metadata:
      labels:
        service: cloud2instance
    spec:
      containers:
      - name: cloud2instance
        image: secobau/proxy2aws:latest
        volumeMounts:
        - name: cloud2instance-logs
          mountPath: /var/log/nginx
        - name: cloud2instance-conf
          mountPath: /run/secrets/etc/nginx/conf.d
          readOnly: true
      volumes:
      - name: cloud2instance-logs
        emptyDir: {}
      - name: cloud2instance-conf
        secret:
          secretName: cloud2instance.conf
---
apiVersion: v1
kind: Service
metadata:
  name: aws2cloud
spec:
  ports:
  - port: 80
  selector:
    service: aws2cloud
---
apiVersion: v1
kind: Service
metadata:
  name: cloud2instance
spec:
  ports:
  - port: 80
  selector:
    service: cloud2instance
---
###############################################################################
# f=aws2cloud.conf && kubectl create configmap $f --from-file $f              ;
# f=aws2cloud.htpasswd && kubectl create secret generic $f --from-file $f     ;
# f=cloud2instance.conf && kubectl create secret generic $f --from-file $f    ;
# kubectl apply -f aws2cloud.yaml                                             ;
###############################################################################
