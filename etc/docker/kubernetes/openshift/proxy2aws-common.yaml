#########################################################################
#      Copyright (C) 2020        Sebastian Francisco Colomar Bauza      #
#      SPDX-License-Identifier:  GPL-2.0-only                           #
#########################################################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws2cloud-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aws2cloud
  template:
    metadata:
      labels:
        app: aws2cloud
    spec:
      containers:
      - 
        image: secobau/nginx:5.4
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
        name: aws2cloud-container
        ports:
          -
            containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 1
        volumeMounts:
        - 
          mountPath: /var/log/nginx
          name: aws2cloud-logs-vol
        - 
          mountPath: /etc/nginx/conf.d
          name: aws2cloud-conf-vol
          readOnly: true
        - 
          mountPath: /etc/nginx/htpasswd
          name: aws2cloud-htpasswd-vol
          readOnly: true
        - 
          mountPath: /run/nginx/etc/nginx
          name: nginx-conf-vol
          readOnly: true
        -
          mountPath: /var/cache/nginx
          name: nginx-cache-vol
        -
          mountPath: /var/run
          name: nginx-run-vol
      volumes:
      -
        name: nginx-run-vol
        emptyDir: {}
      -
        name: nginx-cache-vol
        emptyDir: {}
      - 
        name: aws2cloud-logs-vol
        persistentVolumeClaim:
          claimName: aws2cloud-pvc
      - 
        configMap:
          name: aws2cloud-cm
        name: aws2cloud-conf-vol
      - 
        name: aws2cloud-htpasswd-vol
        secret:
          secretName: aws2cloud-secret
      - 
        configMap:
          name: nginx-cm
        name: nginx-conf-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws2prem-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aws2prem
  template:
    metadata:
      labels:
        app: aws2prem
    spec:
      containers:
      - 
        image: secobau/nginx:5.4
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
        name: aws2prem-container
        ports:
          -
            containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 1
        volumeMounts:
        - 
          mountPath: /var/log/nginx
          name: aws2prem-logs-vol
        - 
          mountPath: /etc/nginx/conf.d
          name: aws2prem-conf-vol
          readOnly: true
        - 
          mountPath: /run/nginx/etc/nginx
          name: nginx-conf-vol
          readOnly: true
        -
          mountPath: /var/cache/nginx
          name: nginx-cache-vol
        -
          mountPath: /var/run
          name: nginx-run-vol
      volumes:
      -
        name: nginx-run-vol
        emptyDir: {}
      -
        name: nginx-cache-vol
        emptyDir: {}
      - 
        name: aws2prem-logs-vol
        persistentVolumeClaim:
          claimName: aws2prem-pvc
      -
        name: aws2prem-conf-vol
        secret:
          secretName: aws2prem-secret
      - 
        configMap:
          name: nginx-cm
        name: nginx-conf-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud2instance-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloud2instance
  template:
    metadata:
      labels:
        app: cloud2instance
    spec:
      containers:
      - 
        image: secobau/nginx:5.4
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
        name: cloud2instance-container
        ports:
          -
            containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 1
        volumeMounts:
        - 
          mountPath: /var/log/nginx
          name: cloud2instance-logs-vol
        - 
          mountPath: /etc/nginx/conf.d
          name: cloud2instance-conf-vol
          readOnly: true
        - 
          mountPath: /run/nginx/etc/nginx
          name: nginx-conf-vol
          readOnly: true
        -
          mountPath: /var/cache/nginx
          name: nginx-cache-vol
        -
          mountPath: /var/run
          name: nginx-run-vol
      volumes:
      -
        name: nginx-run-vol
        emptyDir: {}
      -
        name: nginx-cache-vol
        emptyDir: {}
      - 
        name: cloud2instance-logs-vol
        persistentVolumeClaim:
          claimName: cloud2instance-pvc
      - 
        name: cloud2instance-conf-vol
        secret:
          secretName: cloud2instance-secret
      - 
        configMap:
          name: nginx-cm
        name: nginx-conf-vol
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: aws2cloud-netpol
spec:
  podSelector:
    matchLabels:
      app: aws2cloud
  ingress:
    -
      ports:
        -
          port: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: aws2prem-netpol
spec:
  podSelector:
    matchLabels:
      app: aws2prem
  ingress:
    -
      ports:
        -
          port: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cloud2instance-netpol
spec:
  podSelector:
    matchLabels:
      app: cloud2instance
  ingress:
    -
      from:
        -
          podSelector:
            matchLabels:
              app: aws2cloud
      ports:
        -
          port: 8080
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aws2cloud-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: gp2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aws2prem-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: gp2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cloud2instance-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: gp2
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: aws2cloud-route
spec:
  port:
    targetPort: 8080
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: aws2cloud
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: aws2prem-route
spec:
  port:
    targetPort: 8080
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: aws2prem
---
apiVersion: v1
kind: Service
metadata:
  name: aws2cloud
spec:
  ports:
  - 
    port: 8080
    targetPort: 8080
  selector:
    app: aws2cloud
---
apiVersion: v1
kind: Service
metadata:
  name: aws2prem
spec:
  ports:
  -
    port: 8080
    targetPort: 8080
  selector:
    app: aws2prem
---
apiVersion: v1
kind: Service
metadata:
  name: cloud2instance
spec:
  ports:
  - 
    port: 8080
    targetPort: 8080
  selector:
    app: cloud2instance
---
